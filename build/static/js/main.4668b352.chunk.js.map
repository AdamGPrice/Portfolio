{"version":3,"sources":["NavBar/NavBar.js","About/About.js","Projects/ProjectCard.js","Projects/rawInfo.js","Projects/Projects.js","NotFound.js","assets/Software_Renderer.gif","Projects/ProjectPages/SoftwareRenderer.js","assets/Generative_Adversarial_Network_Dissertation.pdf","Projects/ProjectPages/BaseProjectPage.js","Projects/ProjectPages/Dissertation.js","Projects/ProjectPages/TableBookingApp.js","App.js","index.js"],"names":["NavBar","props","location","useLocation","pathname","className","onClick","incrementRickRoll","to","About","href","target","rel","icon","faGithub","faLinkedinIn","TechBadge","tech","ProjectCard","techbadges","project","map","index","isShowcase","dir","title","desc","url","newWindow","window","open","opener","openInNewTab","git","projects","showcase","shortdesc","techlong","body","simple","Projects","projectsShowcase","projectsSimple","NotFound","SoftwareRenderer","src","image","alt","components","Dissertation","pdf","TableBookingApp","BaseProjectPage","filter","getProjectInfo","SpecificProject","getProjectBody","App","state","rickroll","this","setState","replace","routes","exact","path","component","value","React","Component","dotenv","config","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4668b352.chunk.js","sourcesContent":["import './NavBar.css';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst NavBar = (props) => {\r\n  const location = useLocation().pathname;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m4\">\r\n        <h1 \r\n          className=\"name\"\r\n          onClick={() => props.incrementRickRoll()}\r\n        >Adam Price</h1>\r\n        <p className=\"sub-heading name-title\">Software Developer</p>\r\n        <div className=\"nav-btns-mobile left\">\r\n          <Link className=\"link\" to='/'>\r\n            <div \r\n              className={ location !== '/' ? 'custom-btn' : 'custom-btn-selected' }\r\n            >About Me</div></Link>\r\n          <Link className=\"link\" to='/projects'>\r\n            <div \r\n              className={ location !== '/projects' ? 'custom-btn' : 'custom-btn-selected' }\r\n            >Projects</div></Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"col s8\">\r\n        <div className=\"nav-btns right\">\r\n          <Link className=\"link\" to='/'>\r\n            <div \r\n              className={ location !== '/' ? 'custom-btn' : 'custom-btn-selected' }\r\n            >About Me</div></Link>\r\n          <Link className=\"link\" to='/projects'>\r\n            <div \r\n              className={ location !== '/projects' ? 'custom-btn' : 'custom-btn-selected' }\r\n            >Projects</div></Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m8\">\r\n        <h2>About Me</h2>\r\n        <p>Hello, My name is Adam. I'm a Software Developer who studied Computer Science graduate \r\n          from <a href=\"https://www.derby.ac.uk/\" target=\"_blank\" rel=\"noreferrer\">The University of Derby</a>.\r\n          </p>\r\n        <p>\r\n          My main interests include problem solving, mathematics, machine learning and web development.\r\n          I have experience with various programming languages and technologies from working on a range of projects \r\n          from embedded systems to distributed web applications.\r\n        </p>\r\n\r\n        <p>Check out my <Link  to='/projects'>Projects</Link> page to \r\n        find out about previous projects I have worked on and what I am working on next.</p>\r\n\r\n        <h2>Contact</h2>\r\n        <p>\r\n          Feel free to reach out if you want a to build something together, have a question, or just want to connect.\r\n        </p>\r\n        <p><a href=\"mailto:adamprice.dev@gmail.com\" rel=\"noreferrer\">adamprice.dev@gmail.com</a></p>\r\n        <p>\r\n          <a \r\n            href=\"https://github.com/AdamGPrice\" \r\n            target=\"_blank\" rel=\"noreferrer\">\r\n              <FontAwesomeIcon className=\"social-link\" icon={faGithub} />\r\n          </a>\r\n          <a \r\n            href=\"https://www.linkedin.com/in/adamgprice\" \r\n            target=\"_blank\" rel=\"noreferrer\">\r\n              <FontAwesomeIcon className=\"social-link\" icon={faLinkedinIn} />\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import { Link } from 'react-router-dom';\r\nimport './ProjectCard.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nconst openInNewTab = (url) => {\r\n  const newWindow = window.open(url, '_blank', 'noopener,noreferrer')\r\n  if (newWindow) newWindow.opener = null\r\n}\r\n\r\nconst TechBadge = (props) => {\r\n  return(\r\n    <p className=\"techbadge\">{props.tech}</p>\r\n  );\r\n}\r\n\r\nconst ProjectCard = (props) => {\r\n  const techbadges = props.project.tech.map((tech, index) => {\r\n    return(\r\n      <TechBadge \r\n        key={tech + index}\r\n        tech={tech}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (props.isShowcase) {\r\n    return(\r\n      <Link to={`${props.project.dir}`}>\r\n      <div \r\n        className=\"projectcard-box col s12 m6 l4\">\r\n        <div className=\"projectcard-innerbox\">\r\n          <p className=\"sub-heading showcase-heading\">{props.project.title}</p>\r\n          <i className=\"material-icons open-icon\">read_more</i>\r\n          <p>{props.project.desc}</p>\r\n        </div>\r\n          {techbadges}\r\n      </div>\r\n      </Link>\r\n    )\r\n  } else {\r\n    return (\r\n      <div \r\n        onClick={() => openInNewTab(props.project.git)}\r\n        className=\"projectcard-box col s12 m6 l4\">\r\n        <div className=\"projectcard-innerbox\">\r\n          <p className=\"sub-heading\">{props.project.title}</p>\r\n          <FontAwesomeIcon className=\"github-icon\" icon={faGithub} />\r\n          <i className=\"material-icons open-icon\">open_in_new</i>\r\n          <p>{props.project.desc}</p>\r\n        </div>\r\n          {techbadges}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectCard;\r\n","const showcase = [\r\n  {\r\n    title: 'Software Graphics Renderer',\r\n    desc: 'A 3D Software renderer built in C++ from the ground up without the use of modern graphic APIs.',\r\n    shortdesc: '3D Renderer built from the ground up.',\r\n    tech: ['C', 'C++'],\r\n    techlong: ['C', 'C++', 'Renderer', 'Rasteriser'],\r\n    git: 'https://github.com/AdamGPrice/Software-Graphics-Renderer',\r\n    dir: '/software-renderer',\r\n    body: 'SoftwareRenderer',\r\n  },\r\n  {\r\n    title: 'Generative Adversarial Network Evaluation',\r\n    desc: 'Evaluating the performance of GANs with and without the aid of transfer learning.',\r\n    shortdesc: 'Evaluating the performance of GANs.',\r\n    tech: ['Python', 'Machine Learning'],\r\n    techlong: ['Python', 'Tensorflow', 'Machine Learning', 'Image Synthesis'],\r\n    git: 'https://github.com/AdamGPrice/Generative-Adversarial-Network',\r\n    dir: '/generative-adversarial-networks-evaluation',\r\n    body: 'Dissertation'\r\n  },\r\n]\r\n\r\nconst simple = [\r\n  {\r\n    title: 'x86 Bootloader',\r\n    desc: 'Bootloader written in x86 Assembly with some functionality to draw primitives to the screen.',\r\n    tech: ['Assembly'],\r\n    git: 'https://github.com/AdamGPrice/x86-Graphics',\r\n  },\r\n  {\r\n    title: 'Table Booking App',\r\n    desc: 'Scalable table booking web application for bars/pubs using Docker containers and kubernetes.',\r\n    tech: ['JS', 'Node', 'Docker', 'MySQL'],\r\n    techlong: ['JavaScript', 'Node', 'Express', 'Docker', 'Kubernetes', 'MySQL'],\r\n    git: 'https://github.com/AdamGPrice/Table-Booking-Application',\r\n    dir: '/table-booking-app',\r\n    body: 'TableBookingApp',\r\n  },\r\n  {\r\n    title: 'Interpreter Language, SIMP',\r\n    desc: 'SIMP is a simple interpreter language built with JavaCC.',\r\n    tech: ['Java'],\r\n    git: 'https://github.com/AdamGPrice/SIMP-Language-Interpreter',\r\n  },\r\n  {\r\n    title: 'Extending Xv6 Operating System',\r\n    desc: 'Adding extra functionality to the Xv6 Operating System through system calls.',\r\n    tech: ['C', 'Linux', 'OS'],\r\n    git: 'https://github.com/AdamGPrice/Xv6-Operating-System',\r\n  },\r\n  {\r\n    title: 'JS Neural Network Library',\r\n    desc: 'Fully connected neural network library built in JavaScript for fun.',\r\n    tech: ['JS', 'Machine Learning'],\r\n    git: 'https://github.com/AdamGPrice/JavaScript-Neural-Network',\r\n  },\r\n]\r\n\r\nconst projects = { showcase, simple };\r\n\r\nexport default projects;","import ProjectCard from './ProjectCard';\r\nimport projects from './rawInfo';\r\n\r\nconst Projects = () => {\r\n  const projectsShowcase = projects.showcase.map((project, index) => {\r\n    return(\r\n      <ProjectCard\r\n        key={project.title + index}\r\n        project={project}\r\n        isShowcase={true}\r\n      />\r\n    )\r\n  });\r\n\r\n  const projectsSimple = projects.simple.map((project, index) => {\r\n    return(\r\n      <ProjectCard \r\n        key={project.title + index}\r\n        project={project}\r\n        isShowcase={false}\r\n      />\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12\">\r\n        <h2>Projects</h2>\r\n        <p>Here are some cool projects I have worked on!</p>\r\n        <div className=\"row\">\r\n          {projectsShowcase}\r\n        </div>\r\n        <br/>\r\n        <h2>More on Github</h2>\r\n        <div className=\"row\">\r\n          {projectsSimple}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m8\">\r\n        <h1>404 PAGE NOT FOUND</h1>\r\n        <p className=\"sub-heading\">What are you looking for... 👀. click <Link  to='/'>here</Link> to find my home page.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","export default __webpack_public_path__ + \"static/media/Software_Renderer.0666280b.gif\";","import image from '../../assets/Software_Renderer.gif';\r\n\r\nconst SoftwareRenderer = () => {\r\n  return(\r\n    <div>\r\n      <p>\r\n        This is a 3D renderer built in C++ from the ground up without the use of modern graphics APIs and GPU hardware acceleration.\r\n        It's a real-time software renderer so all of the graphics calculation are done on the cpu \r\n        and the final result of each frame is displayed on screen using the Win32 GDI to plot pixels.\r\n      </p>\r\n\r\n      <h3>Example Model (Marvin the Martian)</h3>\r\n      <img src={image} alt=\"3D Renderer showcase\"></img>\r\n\r\n      <p>\r\n        The render can load models which are formatted using <a href=\"http://tfc.duke.free.fr/coding/md2-specs-en.html\" target=\"_blank\" rel=\"noreferrer\">.MD2</a>\r\n        &nbsp;(Quake 2 model format) with or without the models associated texture and render it to the screen.\r\n        This project taught me a lot about C++ and the core funamentals of graphics programming\r\n        because i had to write all of the graphics algorithms myself, Starting with the matrix operations\r\n        to transform 3D objects around in world space, the lighiting calculation for the model\r\n        and finally translating the 3D image to the 2D screen with rasterisation to set each pixel colour depending on textures and light sources.\r\n      </p>\r\n\r\n      <h3>Renderer Features</h3>\r\n      <ul className=\"browser-default\">\r\n        <li>Wireframe model view</li>\r\n        <li>Object transformations</li>\r\n        <ul className=\"browser-default\">\r\n            <li>Translation</li>\r\n            <li>Rotation</li>\r\n            <li>Scaling</li>\r\n        </ul>\r\n        <li>Backface culling</li>\r\n        <li>Solid flat shading</li>\r\n        <li>Lighting sources</li>\r\n        <ul className=\"browser-default\">\r\n            <li>Ambient light</li>\r\n            <li>Directional light</li>\r\n            <li>Point light</li>\r\n            <li>Spot light</li>\r\n        </ul>\r\n        <li>Diffuse/Specular reflection</li>\r\n        <ul className=\"browser-default\">\r\n            <li>Phong lighting model</li>\r\n        </ul>\r\n        <li>Rasteriser (triangle algorithm)</li>\r\n        <li>Object Textures (with perspective correction)</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SoftwareRenderer;","export default __webpack_public_path__ + \"static/media/Generative_Adversarial_Network_Dissertation.4b4e39f6.pdf\";","import './BaseProjectPage.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { useLocation } from 'react-router-dom';  \r\n\r\nimport projects from '../rawInfo';\r\n\r\n// Pages\r\nimport SoftwareRenderer from './SoftwareRenderer';\r\nimport Dissertation from './Dissertation';\r\nimport TableBookingApp from './TableBookingApp';\r\n\r\nconst components = {\r\n  SoftwareRenderer,\r\n  Dissertation,\r\n  TableBookingApp,\r\n};\r\n\r\nconst getProjectInfo = (location) => {\r\n  const project = projects.showcase.filter((project) => {\r\n    return project.dir === location;\r\n  });\r\n  return project[0];\r\n}\r\n\r\nconst getProjectBody = (project) => {\r\n  const SpecificProject = components[project.body];\r\n  return <SpecificProject/>;\r\n}\r\n\r\nconst TechBadge = (props) => {\r\n  return(\r\n    <span><p className=\"techbadge-page\">{props.tech}</p> </span>\r\n  );\r\n}\r\n\r\nconst BaseProjectPage = () => {\r\n  const location = useLocation().pathname;\r\n  const project = getProjectInfo(location);\r\n  //console.log(project);\r\n\r\n  const techbadges = project.techlong.map((tech, index) => {\r\n    return(\r\n        <TechBadge\r\n        key={tech + index}\r\n          tech={tech}\r\n        />\r\n    );\r\n  });\r\n\r\n  const body = getProjectBody(project);\r\n  \r\n  return(\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m12 l8\">\r\n        <h2>{project.title}</h2>\r\n        <div>\r\n          {techbadges}\r\n        </div>\r\n        {body}\r\n        <h3>\r\n          Check out the code\r\n        </h3>\r\n        <a \r\n          href={project.git} \r\n          target=\"_blank\" rel=\"noreferrer\">\r\n            <FontAwesomeIcon className=\"social-link\" icon={faGithub} />\r\n        </a>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BaseProjectPage;","import pdf from '../../assets/Generative_Adversarial_Network_Dissertation.pdf';\r\n\r\n\r\nconst Dissertation = () => {\r\n  return(\r\n    <div>\r\n      <p>\r\n        'Performance Evaluation of Generative Adversarial Networks with Transfer Learning' is the result of a research project\r\n        at university for my independent studies where i evaluate the performance GANs, \r\n        one with transfer learning and one without and then compare the differences with a classifier network trained on the same dataset. \r\n      </p>\r\n\r\n      <h3>Paper</h3>\r\n      <p><a href=\"/Generative_Adversarial_Network_Dissertation.pdf\" target=\"_blank\" rel=\"noreferrer\">Click here</a> to open the pdf in fullscreen</p>\r\n      <iframe src={pdf} title=\"Dissertatopm PDF\"></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dissertation;","//import image from '../../assets/booking-app-search.png';\r\n//<img src={image} alt=\"3D Renderer showcase\"></img>\r\n\r\nconst TableBookingApp = () => {\r\n  return(\r\n    <div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableBookingApp;","import NavBar from './NavBar/NavBar';\r\nimport About from './About/About';\r\nimport Projects from './Projects/Projects';\r\nimport projects from './Projects/rawInfo';\r\n\r\n//import SoftwareRenderer from './Projects/ProjectPages/SoftwareRenderer';\r\n\r\nimport NotFound from './NotFound';\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport BaseProjectPage from './Projects/ProjectPages/BaseProjectPage';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props); \r\n    this.state = { rickroll: 0 };\r\n  }\r\n\r\n  incrementRickRoll() {\r\n    this.setState({ rickroll: this.state.rickroll + 1});\r\n    if (this.state.rickroll > 20) {\r\n      window.location.replace('https://www.youtube.com/watch?v=dQw4w9WgXcQ');\r\n    }\r\n  } \r\n\r\n  render() {\r\n    const routes = projects.showcase.map((project, index) => {\r\n      return(\r\n        <Route \r\n          exact\r\n          key={project.title + index}\r\n          path={project.dir}\r\n          component={BaseProjectPage}\r\n        />\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <div className=\"App container\">\r\n        <NavBar\r\n          incrementRickRoll={(value) => this.incrementRickRoll(value)}\r\n        />\r\n        <Switch>\r\n          <Route exact path='/' component={About}/>\r\n          <Route exact path='/projects' component={Projects}/>\r\n          {routes}\r\n          <Route exact path='*' component={NotFound}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\n\r\nconsole.log('You shouldn\\'t be looking here 🤓');\r\nconsole.log('Check out this hilarious video.', 'https://www.youtube.com/watch?v=dQw4w9WgXcQ');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}